a) 

Location of fork.c

	pic : Attached

	go to linux version 

	i.e.

	cd linux-4.9.5 from Desktop

	now enter:
	select all  ". pro\*" 

	now grep the file using grep.c
	so command would be
	find . pro\* | grep fork.c

	Exact location :
	~/Downloads/linux-4.9.5/kernel$ find -name fork.c

      
Location of do_fork();

	pic : Attached

	go to kernel folder

	now in the fork.c file
	find do_fork() defination

	get the line numbers of starting and ending and print it on the screen using
	in ~/Downloads/linux-4.9.5$ 
	sed -n 1907,1977p fork.c

Location of sys_fork():

	pic : Attached
	
	path :~/Downloads/linux-4.9.5$ gedit arch/m68k/kernel/entry.S
    
	sys_fork is redefined in modern versions of linux, it is in assembly and the pic of assembly is also attached with the file location pics.

	In fork.c there is a function do_fork() which is called by sys_fork() which i present in process.c and is in assembly.
	so whenwe call fork.c it calls the function sys_fork() which further calls do_fork() to genereate a child process and a unique process ID.

b)	
	Command to locate process descriptor  task_struct structure.
	grep -r "struct task_struct {" *
    
	The task_struct structure contains all the information that the kernel has and needs about a process.
	Struct task_struct was stored at the end of the kernel stack of each process.
	This allowed architectures with few registers, such as x86, to calculate the location of the process.
    
    grep  -Hri "^struct task_struct {" 	Output: 	include/linux/sched.h:struct task_struct {     tools/lib/lockdep/uinclude/linux/lockdep.h:struct task_struct {
	output:
	linux-4.9.5/tools/lib/lockdep/uinclude/linux/lockdep.h:struct task_struct {
	linux-4.9.5/include/linux/sched.h:struct task_struct {

	These 2 files contain the definition of task_struct.

	The task_struct structure contains all the information that the kernel has and needs about a process.
	Struct task_struct was stored at the end of the kernel stack of each process. This allowed architectures with few registers, such as x86, to 		calculate the location of the process descriptor via the stack pointer without using an extra register to store the location.

	Each element in the task list is a process descriptor of the type struct task_struct, which is defined in <linux/sched.h>. The process 			descriptor contains all the information about a specific process.
	The process descriptor contains the data that describes the executing programopen files, the process's address space, pending signals,the 		process's state



c)
	File attached : tree.txt

	Command to list all makes in source tree and put in a file.
	tree -I "makefile" > tree.txt

d)

Jiffies are located at:

	Pic : Added
	jiffies.c is located at /linux-4.9.5/kernel/time/jiffies.c
	jiffies.h is located at /linux-4.9.5/include/linux/jiffies.h

	command: locate jiffies

	Jiffies is a global variable which count the number of ticks(pulses) in cpu. 

